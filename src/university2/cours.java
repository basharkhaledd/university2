/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package university2;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static university2.connectdb.connect;

/**
 *
 * @author w
 */
public class cours extends javax.swing.JFrame {

    /**
     * Creates new form cours
     */
    Connection con=null;
    PreparedStatement p=null;
    ResultSet res=null;
    
    int choose;
    public cours() {
        initComponents();
        
        insertnd();
        
        choose=mainmenu.chc;
        if(choose==2){
        this.setTitle("update cours");
        add.setText("update");
        name.setEnabled(false);
        hours.setEnabled(false);
        salary.setEnabled(false);
        doctor.setEnabled(false);
        first.setEnabled(false);
        second.setEnabled(false);


        
        }
         if(choose==3){
        this.setTitle("Delete cours");
        add.setText("Delete");
        name.setEnabled(false);
        hours.setEnabled(false);
        salary.setEnabled(false);
        doctor.setEnabled(false);
        first.setEnabled(false);
        second.setEnabled(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        salary = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        hours = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        number = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        doctor = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        second = new javax.swing.JRadioButton();
        first = new javax.swing.JRadioButton();
        add = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 204));
        jLabel1.setText("salary for hour");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 20));
        getContentPane().add(salary, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 210, 20));
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 210, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("name of cours");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 20));
        getContentPane().add(hours, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 210, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("hours of cours");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, 20));

        number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberKeyReleased(evt);
            }
        });
        getContentPane().add(number, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 210, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 204));
        jLabel4.setText("number of cours");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));
        jLabel5.setText("doctor name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 20));

        doctor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        getContentPane().add(doctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 210, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 204));
        jLabel6.setText("semester");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 20));

        buttonGroup1.add(second);
        second.setText("second");
        getContentPane().add(second, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, -1, -1));

        buttonGroup1.add(first);
        first.setText("first");
        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });
        getContentPane().add(first, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, -1, -1));

        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/73f594dcf26826f1d6638da8dcb14924.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 450, 330));

        setSize(new java.awt.Dimension(450, 361));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if(choose==1){
         insert();
        }else if(choose==2){
         update();
        }else{
         delete();
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstActionPerformed

    private void numberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberKeyReleased
     
        if(evt.getKeyCode()== evt.VK_ENTER && choose==2){
            if(number.getText().equals("")){
           JOptionPane.showMessageDialog(null,"enter number cours" );
            }else{
            try {
               con=connect();
               p=con.prepareStatement("select * from cours where number_cours='"+Integer.parseInt(number.getText())+"'");
               res=p.executeQuery();
               if(res.next()){
                number.setEnabled(false);
                
                name.setEnabled(true);
                name.setText(res.getString(2));
                
                hours.setEnabled(true);
                hours.setText(res.getString(3));
                
                salary.setEnabled(true);
                salary.setText(res.getString(4));
                
                doctor.setEnabled(true);
                doctor.setSelectedItem(res.getString(5));
                
                first.setEnabled(true);
                second.setEnabled(true);
                
               String sem=res.getString(6);
               if(sem=="second"){
                second.setSelected(true);
               }else{
               first.setSelected(true);
               }
               
               }else{
              JOptionPane.showMessageDialog(null,"رقم المادة غير موجود" );
               }
            } catch (SQLException ex) {
                Logger.getLogger(cours.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
             
                 try {
                     con.close();
                      p.close();
                     res.close();
                 } catch (SQLException ex) {
                     Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
             }
            
            } 
        }
        
        

    }//GEN-LAST:event_numberKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cours().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> doctor;
    private javax.swing.JRadioButton first;
    private javax.swing.JTextField hours;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField name;
    private javax.swing.JTextField number;
    private javax.swing.JTextField salary;
    private javax.swing.JRadioButton second;
    // End of variables declaration//GEN-END:variables

    private void insert() {
        int sem=1;
        if(second.isSelected()){
        sem=2;
        }
        
        if(number.getText().equals("") || name.getText().equals("") ||hours.getText().equals("") ||
            doctor.getSelectedIndex()==-1 ||salary.getText().equals("")|| first.isSelected() && second.isSelected())
        {
        JOptionPane.showMessageDialog(null, "There are empty fields");
      }
        else{
            try {
                con=connect();
                p=con.prepareStatement("select * from cours where number_cours='"+Integer.parseInt(number.getText())+"'");
                res=p.executeQuery();
                if(res.next()){
                 JOptionPane.showMessageDialog(null,"رقم المادة موجود مسبقا" );
                
                }else{
                    
                                p=con.prepareStatement("insert into cours values('"+Integer.parseInt(number.getText())+"','"+name.getText()+"','"+Integer.parseInt(hours.getText()) +"',"
                                        + "'"+Integer.parseInt(salary.getText())+"','"+doctor.getSelectedItem()+"','"+sem+"')");
                                   p.execute();
                                  JOptionPane.showMessageDialog(null,"done" );
                                  number.setText("");
                                  name.setText("");
                                  hours.setText("");
                                  salary.setText("");
                                  doctor.setSelectedIndex(-1);
                                  first.setText("");
                                  second.setText("");

                }

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }finally{
             
                 try {
                     con.close();
                      p.close();
                     res.close();
                 } catch (SQLException ex) {
                     Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
             }
               
            


        }
    }

     private void update() {
         int sem=1;
        if(second.isSelected()){
        sem=2;}
     if(name.getText().equals("") ||hours.getText().equals("") ||
            doctor.getSelectedIndex()==-1 ||salary.getText().equals("")|| first.isSelected() && second.isSelected())
        {
        JOptionPane.showMessageDialog(null, "There are empty fields");
      }
        else{
             try {
                 con=connect();
                 p=con.prepareStatement("update cours set name_cours='"+name.getText()+"',hours_cours='"+Integer.parseInt(hours.getText()) +"',salary_1_hour='"+Integer.parseInt(salary.getText())+"',doctor_name='"+doctor.getSelectedItem()
                         +"',semester='"+sem+"' where number_cours='"+Integer.parseInt(number.getText())+"'");
                 p.execute();
                 JOptionPane.showMessageDialog(null,"course has been updated" );
                                  number.setText("");
                                  name.setText("");
                                  hours.setText("");
                                  salary.setText("");
                                  doctor.setSelectedIndex(-1);
                                  first.setText("");
                                  second.setText("");
                                  number.setEnabled(true);
                                  name.setEnabled(false);
                                  hours.setEnabled(false);
                                  salary.setEnabled(false);
                                  doctor.setEnabled(false);
                                  first.setEnabled(false);
                                  second.setEnabled(false);


             } catch (SQLException ex) {
                 Logger.getLogger(cours.class.getName()).log(Level.SEVERE, null, ex);
             }finally{
             
                 try {
                     con.close();
                      p.close();
                     res.close();
                 } catch (SQLException ex) {
                     Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
             }
        }
    }

    private void delete() {
         if(number.getText().equals(""))
        {
        JOptionPane.showMessageDialog(null, "There are empty fields");
      }
        else{
             try {
                con=connect();
                p=con.prepareStatement("select * from cours where number_cours='"+Integer.parseInt(number.getText())+"'");
                res=p.executeQuery();
                if(res.next()){
                    con=connect();
                         p=con.prepareStatement("delete from cours where number_cours='"+Integer.parseInt(number.getText())+"'");
                         p.execute();
                         JOptionPane.showMessageDialog(null,"course has been cleared" );
                         number.setText("");          
                }else{
                  JOptionPane.showMessageDialog(null,"رقم المادة غير موجود" );
  
                }
                

            } catch (SQLException ex) {
                Logger.getLogger(cours.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
             
                 try {
                     con.close();
                      p.close();
                     res.close();
                 } catch (SQLException ex) {
                     Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
             }
             
        }
    }

    private void insertnd() {
           
        try {
            con=connect();
            p=con.prepareStatement("select name from doctor");
            res=p.executeQuery();
            while(res.next()){
            doctor.addItem(res.getString("name"));
            doctor.setSelectedIndex(-1);
            }

        } catch (SQLException ex) {
            Logger.getLogger(cours.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
             
                 try {
                     con.close();
                      p.close();
                     res.close();
                 } catch (SQLException ex) {
                     Logger.getLogger(student.class.getName()).log(Level.SEVERE, null, ex);
                 }
                
             }
    }
}
